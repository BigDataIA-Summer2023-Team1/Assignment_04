name: Build and Deploy

on:
  push:
    branches:
      - main
      - git-workflow


jobs:
  build:
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Python3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/265069367224/locations/global/workloadIdentityPools/github-actions-test/providers/github'
          service_account: 'github-actions-test@damg7245-assignment-04.iam.gserviceaccount.com'

      - name: 'Authenticating to Google Artifact Registry'
        uses: 'docker/login-action@v1'
        with:
          registry: 'gcr.io'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
      
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Build Docker image
        id: docker_build
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t gcr.io/northamerica-northeast2-docker.pkg.dev/damg7245-assignment04/streamlit_application:$IMAGE_TAG ./frontend
          docker images  
          echo "IMAGE_NAME=gcr.io/northamerica-northeast2-docker.pkg.dev/damg7245-assignment04/streamlit_application:$IMAGE_TAG"
          echo "IMAGE_NAME=gcr.io/northamerica-northeast2-docker.pkg.dev/damg7245-assignment04/streamlit_application:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Configure Docker to use gcloud credentials
        run: |
          gcloud auth configure-docker gcr.io

      - name: Push Docker image to GCR
        run: |
          echo ${IMAGE_NAME}
          docker push ${IMAGE_NAME}

      # - name: Build, Tag Docker image and push to Google Artifact Registry
      #   id: docker-push-tagged
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./frontend
      #     push: true
      #     tags: northamerica-northeast2-docker.pkg.dev/damg7245-assignment04/streamlit_application:${{ github.sha }}

      # - name: Pull latest image from Google Artifact Registry
      #   run: |
      #     IMAGE_TAG=$(gcloud artifacts docker images list --repository=streamlit_application --format='value(tags)' --limit=1)
      #     docker pull gcr.io/northamerica-northeast2-docker.pkg.dev/damg7245-assignment04/streamlit_application:${IMAGE_TAG}

      - name: Deploy with the new image
        run: |
          IMAGE_TAG=$(gcloud artifacts docker images list --repository=streamlit_application --format='value(tags)' --limit=1)
          echo "IMAGE_TAG=${IMAGE_TAG}"
          gcloud run deploy assignment04 \
            --image=gcr.io/northamerica-northeast2-docker.pkg.dev/damg7245-assignment04/streamlit_application:${IMAGE_TAG} \
            --platform=managed \
            --region=northamerica-northeast2

